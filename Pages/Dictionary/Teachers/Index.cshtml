@page
@model sms.Pages.Teachers.IndexModel

@{
    ViewData["Title"] = "Список вчителів";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Список вчителів</h1>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <a asp-page="Create"><i class="fas fa-user-plus fa-lg"></i></a>
            <input type="text" name="SearchString" value="@Model.CurrentFilter" placeholder="Пошук по ПІБ"/>
            <button type="submit" class="btn btn-default">
                <i class="fa fa-search"></i>
            </button> |
            <a asp-page="./Index" class="btn btn-default"><i class="fas fa-times"></i></a>
        </p>
    </div>
</form>



<table class="table table-responsive text-nowrap">
    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">Фото</th>
            <th scope="col">
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Teacher[0].LastName)
                </a>
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Teacher[0].FirstName)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.Teacher[0].Patronymic)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 0;
            foreach (var item in Model.Teacher)
            {
                <tr>
                    <th scope="row">
                        @Model.Teacher.SeqNum[i]
                    </th>
                    <td>
                        @if (!string.IsNullOrEmpty(item.ProfilePicture))
                        {<img src="~/images/avatars/@item.ProfilePicture"
                              class="rounded-circle"
                              height="40" width:auto
                              asp-append-version="true" />
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Patronymic)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id"><i class="fas fa-pencil-alt fa-lg"></i></a> |
                        <a asp-page="./Details" asp-route-id="@item.Id"><i class="fas fa-eye fa-lg"></i></a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id"><i class="fas fa-trash fa-lg text-danger"></i></a>
                    </td>
                </tr>
                i++;
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Teacher.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Teacher.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="1"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    <i class="fas fa-fast-backward"></i>
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Teacher.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    <i class="fas fa-arrow-alt-circle-left fa-lg"></i>
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Teacher.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    <i class="fas fa-arrow-alt-circle-right fa-lg"></i>
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Teacher.TotalPages)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    <i class="fas fa-fast-forward"></i>
</a>