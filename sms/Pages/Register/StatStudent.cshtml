@page
@model sms.Pages.Register.StatStudentModel

@{
    ViewData["Title"] = "Навчальні досягнення";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Навчальні досягнення</h1>
<form method="get">
    <div class="row">
        <div class="col-sm-2">
            <div class="form-group">
                <label asp-for="selectedGrade" class="control-label"><i class="fas fa-users"></i></label>
                <select asp-for="selectedGrade" name="gradeId" style="width:auto" asp-items="Model.GradesSL">
                    <option value="0">Оберіть клас</option>
                </select>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label asp-for="selectedStudent" class="control-label"><i class="fas fa-user"></i></label>
                <select asp-for="selectedStudent" name="studentId" style="width:auto" asp-items="Model.StudentsSL" onchange="this.form.submit();"></select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label asp-for="selectedMonth" class="control-label"><i class="fas fa-calendar-alt"></i></label>
                <select asp-for="selectedMonth" name="month" style="width:auto" asp-items="Model.Months" onchange="this.form.submit();"></select>
            </div>
        </div>
        <div class="col-sm-2">
            <div class="form-group">
                <label asp-for="selectedYear" class="control-label"><i class="fas fa-calendar"></i></label>
                <select asp-for="selectedYear" name="year" style="width:auto" asp-items="Model.YearSL" onchange="this.form.submit();"></select>
            </div>
        </div>
    </div>
</form>

<div class="row">
    <table class="col-sm-5 table table-responsive text-nowrap table-hover" id="schoolTable">
        <thead>
            <tr>
                <th scope="col" style="text-align:center" class="col-auto">#</th>
                <th scope="col" style="text-align: center" class="col-auto">
                    <a asp-page="./StatStudent" asp-route-sortOrder="@Model.NameSort"
                       asp-route-gradeId="@Model.selectedGrade"
                       asp-route-studentId="@Model.selectedStudent"
                       asp-route-year="@Model.selectedYear"
                       asp-route-month="@Model.selectedMonth">
                        Предмет
                    </a>
                </th>
                <th scope="col" style="text-align: center" class="col-auto">Оцінки</th>
                <th scope="col" style="text-align: center" class="col-auto">
                    <a asp-page="./StatStudent" asp-route-sortOrder="@Model.MarkSort"
                       asp-route-gradeId="@Model.selectedGrade"
                       asp-route-studentId="@Model.selectedStudent"
                       asp-route-year="@Model.selectedYear"
                       asp-route-month="@Model.selectedMonth">
                        Сер.бал
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @{
                int i = 0;
                for (var subject = 0; subject < Model.subjects.Count; subject++)
                {
                    <tr>
                        <th scope="row" style="text-align:center">@Model.subjects.SeqNum[i]</th>
                        <th scope="row">@Model.subjects[subject].Name</th>
                        <td>
                            @Model.subjects[subject].ConcatenatedMarks
                        </td>
                        <td style="text-align:center">
                            @Model.subjects[subject].Avg
                        </td>
                    </tr>
                    i++;
                }
            }
        </tbody>
    </table>
    <div class="col-sm-7">
        <canvas id="barChart" width="800" height="700"></canvas>
    </div>
</div>

@{
    var prevDisabled = !Model.subjects.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.subjects.HasNextPage ? "disabled" : "";
}

<a asp-page="./StatStudent"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="1"
   asp-route-gradeId="@Model.selectedGrade"
   asp-route-studentId="@Model.selectedStudent"
   asp-route-year="@Model.selectedYear"
   asp-route-month="@Model.selectedMonth"
   class="btn btn-primary @prevDisabled">
    <i class="fas fa-arrow-alt-circle-left fa-fast-backward"></i>
</a>
<a asp-page="./StatStudent"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.subjects.PageIndex - 1)"
   asp-route-gradeId="@Model.selectedGrade"
   asp-route-studentId="@Model.selectedStudent"
   asp-route-year="@Model.selectedYear"
   asp-route-month="@Model.selectedMonth"
   class="btn btn-primary @prevDisabled">
    <i class="fas fa-arrow-alt-circle-left fa-lg"></i>
</a>
<a asp-page="./StatStudent"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.subjects.PageIndex + 1)"
   asp-route-gradeId="@Model.selectedGrade"
   asp-route-studentId="@Model.selectedStudent"
   asp-route-year="@Model.selectedYear"
   asp-route-month="@Model.selectedMonth"
   class="btn btn-primary @nextDisabled">
    <i class="fas fa-arrow-alt-circle-right fa-lg"></i>
</a>
<a asp-page="./StatStudent"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.subjects.TotalPages)"
   asp-route-gradeId="@Model.selectedGrade"
   asp-route-studentId="@Model.selectedStudent"
   asp-route-year="@Model.selectedYear"
   asp-route-month="@Model.selectedMonth"
   class="btn btn-primary @nextDisabled">
    <i class="fas fa-arrow-alt-circle-right fa-fast-forward"></i>
</a>


@section scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        @* Fill students dropdown *@
        @* Заповнення випадаючого списку учнями *@
        $(function () {
            $("#selectedGrade").on("change", function () {
                var gradeId = $(this).val();
                $("#selectedStudent").empty();
                $("#selectedStudent").append("<option value=''>Оберіть учня</option>");
                $.getJSON(`?handler=Students&gradeId=${gradeId}`, (data) => {
                    $.each(data, function (i, item) {
                        $("#selectedStudent").append(`<option value="${item.value}">${item.text}</option>`);
                    });
                });
            });
        });

        @* Get query parameters *@
        @* Отримання значень параметрів з рядка адреси *@
        function query_string(variable) {
            var query = window.location.search.substring(1);
            var vars = query.split("&");
            for (var i = 0; i < vars.length; i++) {
                var pair = vars[i].split("=");
                if (pair[0] == variable) { return pair[1]; }
            }
            return (false);
        }

        var ctx = document.getElementById('barChart').getContext('2d');

        var year = query_string('year');
        var month = query_string('month');
        var gradeId = query_string('gradeId');
        var studentId = query_string('studentId');

        @* Random color generator *@
        @* Генератор випадкових кольорів *@
        var randomColorGenerator = function () {
            return '#' + (Math.random().toString(16) + '0000000').slice(2, 8);
        };

        @* Bar chars: student's academic performance *@
        @* Діаграма успішності учня *@
        $.ajax({
            url: "?handler=Data",
            type: "POST",
            headers: { "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val() },
            dataType: "json",
            data: { 'year': year, 'month': month, 'gradeId': gradeId, 'studentId': studentId },
            success: function (data) {
                var labels = [];
                var dataresults = [];
                $.each(data, function (index, item) {
                    labels.push(item.name);
                    dataresults.push(item.avg);
                });
                if (studentId) {
                    var myChart = new Chart(ctx, {
                        type: 'bar',
                        data: {
                            labels: labels,
                            datasets: [{
                                label: 'Успішність',
                                data: dataresults,
                                backgroundColor: randomColorGenerator,
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    suggestedMin: 1,
                                    suggestedMax: 12,
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            }
        });
    </script>
}
